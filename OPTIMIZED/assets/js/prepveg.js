const firebaseConfig={ apiKey:"AIzaSyBRN5PnCCkUZwcIQcH7v6HiE3S2p474wN8", authDomain:"trst-7237c.firebaseapp.com", projectId:"trst-7237c", storageBucket:"trst-7237c.appspot.com", messagingSenderId:"170480411329", appId:"170480411329" }; firebase.initializeApp(firebaseConfig); const auth=firebase.auth(); const authLoading=document.getElementById('auth-loading'); auth.onAuthStateChanged((user) => { if (user) { authLoading.style.display='none'; document.querySelector('.container').style.display='block'; initApp(); } else { authLoading.querySelector('.auth-message').innerHTML='<div class="auth-error">Authentication required. Redirecting to login...</div>'; setTimeout(() => { window.location.href='index.html'; }, 2000); } }); function initApp() { const prepProducts=[ { id:1, name:"Peeled Whole Potatoes", icon:"utensils", description:"Ready-to-cook peeled potatoes for roasting, boiling, or mashing.", weight:"5kg" }, { id:2, name:"Prepared Chips", icon:"utensils", description:"Pre-cut chips for frying or baking.", weight:"5kg" }, { id:3, name:"Sliced Carrot", icon:"utensils", description:"Ready-to-use carrot slices for cooking or salads.", weight:"3kg" }, { id:4, name:"Batton Carrot", icon:"utensils", description:"Carrot batons for stir-fries or snacks.", weight:"2kg" }, { id:5, name:"Sliced Cabbage", icon:"utensils", description:"Thinly sliced cabbage for coleslaw or stir-fries.", weight:"3kg" }, { id:6, name:"Broccoli Florets", icon:"utensils", description:"Fresh broccoli pieces for steaming or stir-fries.", weight:"2.5kg" }, { id:7, name:"Cauliflower Florets", icon:"utensils", description:"Ready-to-cook cauliflower pieces for roasting or sides.", weight:"2.5kg" }, { id:8, name:"Sliced Onion", icon:"utensils", description:"Fresh onion slices for frying or salads.", weight:"5kg" } ]; const prepList=document.getElementById('prepList'); const reportModal=document.getElementById('reportModal'); const closeModal=document.getElementById('closeModal'); const cancelBtn=document.getElementById('cancelBtn'); const generateReport=document.getElementById('generateReport'); const sendEmailBtn=document.getElementById('sendEmailBtn'); const sendAllBtn=document.getElementById('sendAllBtn'); const reportList=document.getElementById('reportList'); const emailForm=document.getElementById('emailForm'); const searchInput=document.getElementById('searchInput'); const notification=document.getElementById('notification'); function renderPrepList(prepArray=prepProducts) { prepList.innerHTML=''; prepArray.forEach(prep => { const prepCard=document.createElement('div'); prepCard.className='prep-card'; prepCard.innerHTML=`<div class="prep-header"><h3 class="prep-name"><i class="fas fa-${prep.icon} prep-icon"></i>${prep.name}</h3><div class="prep-id">ID:${prep.id}</div></div><div class="prep-info"><p class="prep-description">${prep.description}</p><div class="prep-weight">Package Weight:${prep.weight}</div><div class="quantity-control"><span class="quantity-label">Amount:</span><input type="number" min="0" class="quantity-input" id="prep-${prep.id}" placeholder="Enter amount"></div></div>`; prepList.appendChild(prepCard); }); } renderPrepList(); searchInput.addEventListener('input', (e) => { const searchTerm=e.target.value.toLowerCase(); const filteredPrep=prepProducts.filter(prep => prep.name.toLowerCase().includes(searchTerm)||prep.description.toLowerCase().includes(searchTerm) ); renderPrepList(filteredPrep); }); function showReport() { reportList.innerHTML=''; prepProducts.forEach(prep => { const input=document.getElementById(`prep-${prep.id}`); let quantity='N/A'; let quantityClass=''; if (input&&input.value.trim()!=='') { const value=parseInt(input.value); if (!isNaN(value)) { if (value===0) { quantity='0'; quantityClass='quantity-zero'; } else { quantity=value===1?'1 box':`${value} boxes`; } } } const reportItem=document.createElement('li'); reportItem.className='report-item'; reportItem.innerHTML=`<span class="report-prep">${prep.name} (${prep.weight})</span><span class="report-quantity ${quantityClass}">${quantity}</span>`; reportList.appendChild(reportItem); }); reportModal.classList.add('show'); } generateReport.addEventListener('click', showReport); sendAllBtn.addEventListener('click', showReport); const closeModalFunc=() => { reportModal.classList.remove('show'); }; closeModal.addEventListener('click', closeModalFunc); cancelBtn.addEventListener('click', closeModalFunc); function getInventoryList() { let inventoryList=""; prepProducts.forEach(prep => { const input=document.getElementById(`prep-${prep.id}`); let quantity='N/A'; if (input&&input.value.trim()!=='') { const value=parseInt(input.value); if (!isNaN(value)) { quantity=value===0?'0':(value===1?'1 box':`${value} boxes`); } } inventoryList += `${prep.name} (${prep.weight}):${quantity}\n`; }); return inventoryList; } sendEmailBtn.addEventListener('click', (e) => { e.preventDefault(); if (emailForm.checkValidity()) { const email=document.getElementById('email').value; const subject=document.getElementById('subject').value; const message=document.getElementById('message').value; const inventoryList=getInventoryList(); const emailBody=encodeURIComponent( `${message}\n\n`+"PREPARED VEGETABLE INVENTORY REPORT:\n"+"===================================\n\n"+inventoryList ); const mailtoLink=`mailto:${email}?subject=${encodeURIComponent(subject)}&body=${emailBody}`; notification.classList.add('show'); setTimeout(() => { notification.classList.remove('show'); }, 3000); window.location.href=mailtoLink; setTimeout(closeModalFunc, 500); } else { alert('Please enter a valid email address'); } }); reportModal.addEventListener('click', (e) => { if (e.target===reportModal) { closeModalFunc(); } }); }