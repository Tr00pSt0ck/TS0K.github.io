const bakeryItems=[{category:"Cobs",icon:"bread-slice",items:[{id:1,name:"Small x12",description:"Small crusty bread rolls, pack of 12"},{id:2,name:"Medium x6",description:"Medium crusty bread rolls, pack of 6"},{id:3,name:"Large x6",description:"Large crusty bread rolls, pack of 6"}]},{category:"Rolls",icon:"hotdog",items:[{id:4,name:"Finger x12",description:"Long finger rolls, pack of 12"}]},{category:"Bread Loaves",icon:"bread-slice",items:[{id:5,name:"Brown Medium",description:"Medium sliced brown bread, 800g loaf"},{id:6,name:"White Medium",description:"Medium sliced white bread, 800g loaf"},{id:7,name:"Brown Thick",description:"Thick sliced brown bread, 800g loaf"},{id:8,name:"White Thick",description:"Thick sliced white bread, 800g loaf"},{id:9,name:"Tiger Bloomer",description:"Artisan tiger pattern bloomer loaf"},{id:10,name:"White Bloomer",description:"Traditional white bloomer loaf"},{id:11,name:"Brown Bloomer",description:"Wholemeal brown bloomer loaf"},{id:12,name:"Unsliced Brown Bloomer",description:"Unsliced wholemeal bloomer loaf"},{id:13,name:"Unsliced White Bloomer",description:"Unsliced white bloomer loaf"},{id:14,name:"Kingsmill 50/50",description:"Half white half wholemeal bread"},{id:15,name:"Gluten Free",description:"Gluten-free bread loaf"}]},{category:"Wraps",icon:"bread-slice",items:[{id:16,name:"Medium White",description:"Medium white tortilla wraps"},{id:17,name:"Large White",description:"Large white tortilla wraps"}]}];document.addEventListener('DOMContentLoaded',()=>{const breadList=document.getElementById('breadList');const reportModal=document.getElementById('reportModal');const closeModal=document.getElementById('closeModal');const cancelBtn=document.getElementById('cancelBtn');const generateReport=document.getElementById('generateReport');const sendEmailBtn=document.getElementById('sendEmailBtn');const sendAllBtn=document.getElementById('sendAllBtn');const reportList=document.getElementById('reportList');const emailForm=document.getElementById('emailForm');const searchInput=document.getElementById('searchInput');const notification=document.getElementById('notification');function renderBreadList(){breadList.innerHTML='';bakeryItems.forEach(categoryGroup=>{const categoryHeader=document.createElement('div');categoryHeader.className='category-section';categoryHeader.innerHTML=`
                        <div class="category-icon">
                            <i class="fas fa-${categoryGroup.icon}"></i>
                        </div>
                        <h2 class="category-title">${categoryGroup.category}</h2>
                    `;breadList.appendChild(categoryHeader);categoryGroup.items.forEach(item=>{const breadCard=document.createElement('div');breadCard.className='bread-card';breadCard.innerHTML=`
                            <div class="bread-header">
                                <h3 class="bread-name">
                                    <i class="fas fa-${categoryGroup.icon} bread-icon"></i>
                                    ${item.name}
                                </h3>
                                <div class="bread-id">ID: ${item.id}</div>
                            </div>
                            <div class="bread-info">
                                <p class="bread-description">${item.description}</p>
                                <div class="quantity-control">
                                    <span class="quantity-label">Amount:</span>
                                    <input type="number" min="0" class="quantity-input" id="item-${item.id}" placeholder="Enter quantity">
                                </div>
                            </div>
                        `;breadList.appendChild(breadCard);});});}
renderBreadList();searchInput.addEventListener('input',(e)=>{const searchTerm=e.target.value.toLowerCase();document.querySelectorAll('.bread-card, .category-section').forEach(el=>{el.style.display='none';});bakeryItems.forEach(categoryGroup=>{let categoryHasVisibleItems=false;categoryGroup.items.forEach(item=>{const card=document.getElementById(`item-${item.id}`).closest('.bread-card');const categoryHeader=card?card.previousElementSibling:null;if(item.name.toLowerCase().includes(searchTerm)||item.description.toLowerCase().includes(searchTerm)){card.style.display='flex';if(categoryHeader){categoryHeader.style.display='flex';categoryHasVisibleItems=true;}}});if(categoryHasVisibleItems){const firstCard=breadList.querySelector(`.bread-card[style="display: flex;"]`);if(firstCard&&firstCard.previousElementSibling){firstCard.previousElementSibling.style.display='flex';}}});if(searchTerm===''){document.querySelectorAll('.bread-card, .category-section').forEach(el=>{el.style.display='';});}});function showReport(){reportList.innerHTML='';bakeryItems.forEach(categoryGroup=>{const categoryHeader=document.createElement('li');categoryHeader.className='report-category';categoryHeader.innerHTML=`
                        <i class="fas fa-${categoryGroup.icon}"></i>
                        ${categoryGroup.category}
                    `;reportList.appendChild(categoryHeader);categoryGroup.items.forEach(item=>{const input=document.getElementById(`item-${item.id}`);let quantity='N/A';let quantityClass='';if(input.value.trim()!==''){const value=parseInt(input.value);if(!isNaN(value)){if(value===0){quantity='0';quantityClass='quantity-zero';}else{quantity=value;}}}
const reportItem=document.createElement('li');reportItem.className='report-item';reportItem.innerHTML=`
                            <span class="report-bread">${item.name}</span>
                            <span class="report-quantity ${quantityClass}">${quantity}</span>
                        `;reportList.appendChild(reportItem);});});reportModal.classList.add('show');}
generateReport.addEventListener('click',showReport);sendAllBtn.addEventListener('click',showReport);const closeModalFunc=()=>{reportModal.classList.remove('show');};closeModal.addEventListener('click',closeModalFunc);cancelBtn.addEventListener('click',closeModalFunc);function getInventoryList(){let inventoryList="";bakeryItems.forEach(categoryGroup=>{inventoryList+=`${categoryGroup.category}:\n`;inventoryList+="----------------------------\n";categoryGroup.items.forEach(item=>{const input=document.getElementById(`item-${item.id}`);let quantity='N/A';if(input.value.trim()!==''){const value=parseInt(input.value);if(!isNaN(value)){quantity=value;}}
inventoryList+=`${item.name}: ${quantity}\n`;});inventoryList+="\n";});return inventoryList;}
sendEmailBtn.addEventListener('click',(e)=>{e.preventDefault();if(emailForm.checkValidity()){const email=document.getElementById('email').value;const subject=document.getElementById('subject').value;const message=document.getElementById('message').value;const inventoryList=getInventoryList();const emailBody=encodeURIComponent(`${message}\n\n`+"BAKERY INVENTORY REPORT:\n"+"========================\n\n"+
inventoryList);const mailtoLink=`mailto:${email}?subject=${encodeURIComponent(subject)}&body=${emailBody}`;notification.classList.add('show');setTimeout(()=>{notification.classList.remove('show');},3000);window.location.href=mailtoLink;setTimeout(closeModalFunc,500);}else{alert('Please enter a valid email address');}});reportModal.addEventListener('click',(e)=>{if(e.target===reportModal){closeModalFunc();}});});